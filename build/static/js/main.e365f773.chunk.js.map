{"version":3,"sources":["components/Ciudad.module.css","components/Card.module.css","components/about.module.css","components/search.module.css","components/Nav.module.css","components/cardtemp.module.css","components/cards.module.css","clima.png","components/SearchBar.jsx","components/Nav.jsx","components/CardTemp.jsx","components/Card.jsx","components/Cards.jsx","components/About.jsx","components/Ciudad.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","onSearch","useState","city","setCity","className","style","searchContainer","onSubmit","e","preventDefault","document","getElementById","value","type","placeholder","agregarinp","onChange","target","handleInputChange","id","agregarbut","Nav","styles","nav","title","to","src","Logo","alt","width","color","textDecoration","about","CardTemp","label","cardtemp","htmlFor","Card","max","min","name","img","onClose","cardContainer","onClick","button","gridColumn","icon","Cards","cities","cards_container","map","c","propTypes","PropTypes","number","string","func","About","aboutsection","aboutcontainer","desc","Ciudad","ciudadsection","container","info","temp","weather","wind","clouds","latitud","longitud","App","setCities","ciudad","fetch","process","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","oldCities","alert","onFilter","ciudadId","filter","parseInt","length","path","render","component","exact","match","params","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e365f773.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ciudadsection\":\"Ciudad_ciudadsection__2Bj5-\",\"icon\":\"Ciudad_icon__Tikeo\",\"name\":\"Ciudad_name__2RSyd\",\"info\":\"Ciudad_info__32QmR\",\"container\":\"Ciudad_container__KV7Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__1B8ir\",\"button\":\"Card_button__3JwK3\",\"city\":\"Card_city__2dRiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutsection\":\"about_aboutsection__mZXkM\",\"aboutcontainer\":\"about_aboutcontainer__T64-4\",\"title\":\"about_title__3Z3Mt\",\"desc\":\"about_desc__1B_Mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search_searchContainer__2IIhi\",\"agregarinp\":\"search_agregarinp__3_4x8\",\"agregarbut\":\"search_agregarbut__3RLIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoHenry\":\"Nav_logoHenry__1bKcb\",\"nav\":\"Nav_nav__2m5y_\",\"title\":\"Nav_title__1Jhuv\",\"about\":\"Nav_about__igiZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardtemp\":\"cardtemp_cardtemp__1OcIw\",\"label\":\"cardtemp_label__eTx_C\",\"value\":\"cardtemp_value__26WGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards_container\":\"cards_cards_container__1-y_J\"};","export default __webpack_public_path__ + \"static/media/clima.8e824915.png\";","import React, { useState } from 'react';\r\nimport style from './search.module.css'\r\nexport default function SearchBar({onSearch}) {\r\n  // acá va tu código\r\n  const [city, setCity] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    setCity(e.target.value); \r\n  }\r\n  return (\r\n    <form className={style.searchContainer} onSubmit={(e) => {\r\n      e.preventDefault();\r\n      onSearch(city);\r\n      const input = document.getElementById(\"search-input\");\r\n      input.value = \"\";\r\n    }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ciudad\"\r\n        className={style.agregarinp}\r\n        onChange={(e)=>handleInputChange(e)}\r\n        id=\"search-input\"\r\n      />\r\n      <input type=\"submit\" className={style.agregarbut} value=\"Agregar\" />\r\n    </form>\r\n  )\r\n};   ","import React from 'react';\r\nimport Logo from '../clima.png'\r\nimport SearchBar from './SearchBar.jsx';\r\nimport styles from './Nav.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav({onSearch}) {\r\n  return (\r\n    <div className={styles.nav}>\r\n      <div className={styles.title}>\r\n        <Link to='/' >\r\n          <img src={Logo} alt=\"climalogo\" id='logoHenry' width='50px'/>\r\n        </Link>\r\n        <Link to='/' style={{color: 'inherit',textDecoration:'none'}}>\r\n          <h4>Weather App</h4>\r\n        </Link>\r\n        <Link to='/about' style={{color: 'inherit',textDecoration:'none'}}>\r\n          <span className={styles.about}>About</span>\r\n        </Link>\r\n      </div>\r\n      <SearchBar onSearch={onSearch}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import style from './cardtemp.module.css'\r\n\r\nexport default function CardTemp({label, value}){\r\n    return(\r\n      <div className={style.cardtemp}>\r\n        <label htmlFor=\"\" className={style.label}>{label}</label>\r\n        <span className={style.value}>{value} °C</span>\r\n      </div>\r\n    )\r\n  }","import React from 'react';\r\nimport CardTemp from './CardTemp';\r\nimport styles from './Card.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Card({max, min, name, img, onClose,id}) {\r\n  // acá va tu código\r\n  function handleOnClose(){\r\n    if(typeof onClose === \"function\") onClose();\r\n  }\r\n  return <div className={styles.cardContainer}>\r\n    <button onClick={handleOnClose} className={styles.button}>x</button>\r\n    <Link to={`/ciudad/${id}`} style={{textDecoration:'none' , color:'inherit',gridColumn:'1 / span 3'}}>\r\n      <h5 className={styles.city}>{name}</h5>\r\n    </Link>\r\n    <CardTemp label=\"Min\" value={min}/>\r\n    <CardTemp label=\"Max\" value={max}/>\r\n    <img src={`http://openweathermap.org/img/wn/${img}@2x.png`} className={styles.icon} alt=\"icono del clima\" width=\"50px\"/>\r\n  </div>\r\n};\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport PropTypes from 'prop-types';\r\nimport style from './cards.module.css';\r\n\r\nexport default function Cards({cities,onClose}) {\r\n  // acá va tu código\r\n  // tip, podés usar un map\r\n  return <div className={style.cards_container}>\r\n      {cities.map(c => <Card\r\n        key={c.id}\r\n        max={c.max}\r\n        min={c.min}\r\n        name={c.name}\r\n        img={c.img}\r\n        onClose={() => onClose(c.id)}\r\n        id={c.id}\r\n      /> )}\r\n  </div>\r\n};\r\n\r\nCard.propTypes = {\r\n  max: PropTypes.number,\r\n  min: PropTypes.number,\r\n  name: PropTypes.string,\r\n  img: PropTypes.string,\r\n  onClick: PropTypes.func \r\n};\r\n","import React from 'react';\r\nimport styles from './about.module.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className={styles.aboutsection}>\r\n            <div className={styles.aboutcontainer}>\r\n                <div className={styles.title}>\r\n                    <h3>About Weather Application</h3>\r\n                </div>\r\n                <div className={styles.desc}>\r\n                    <p>\r\n                        This application was created with React.js, \r\n                        it takes the data from OpenWeather API and\r\n                        show it when you add a city from the search\r\n                        bar in the navigation bar. This project is \r\n                        part of the 'Soy Henry' bootcamp. Hope you \r\n                        enjoy it!\r\n                    </p>\r\n                    <span>By: Kevin Torres</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport styles from './Ciudad.module.css'\r\n\r\nfunction Ciudad({city}) {\r\n    return (\r\n        <div className={styles.ciudadsection}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.name}>{city.name}</h2>\r\n                <img src={`http://openweathermap.org/img/wn/${city.img}@2x.png`} className={styles.icon} alt=\"icono del clima\" width=\"50px\"/>\r\n                <div className={styles.info}>\r\n                    <div>Temperatura: {city.temp}°C</div>\r\n                    <div>Clima: {city.weather}</div>\r\n                    <div>Viento: {city.wind}km/h</div>\r\n                    <div>Cantidad de nubes: {city.clouds}</div>\r\n                    <div>Latitud: {city.latitud}°</div>\r\n                    <div>Longitud: {city.longitud}°</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ciudad\r\n","import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Nav from './components/Nav.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport About from './components/About.jsx';\r\nimport Ciudad from './components/Ciudad.jsx'\r\n\r\n\r\nexport default function App() {\r\n  const [cities, setCities] = useState([]);\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n  function onSearch(ciudad) {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n    }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n    if(ciudad.length > 0) {\r\n      return ciudad[0];\r\n    } else {\r\n      return alert(\"Esta ciudad no se encuentra en la lista\");\r\n    }\r\n  }\r\n  function onClose(id) {\r\n      setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Route\r\n        path='/'\r\n        render={()=><Nav onSearch={onSearch}/>}\r\n      />\r\n      <Route\r\n        path='/about'\r\n        component={About}\r\n      />\r\n      <Route\r\n        path='/'\r\n        exact\r\n        render={()=><Cards\r\n          cities={cities}\r\n          onClose={onClose}\r\n          />}\r\n        />\r\n      <Route\r\n        path=\"/ciudad/:ciudadId\"\r\n        render={({match})=> \r\n          <Ciudad \r\n          city={onFilter(match.params.ciudadId)}\r\n          />}\r\n      />\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}